if not game:IsLoaded() then -- check if the game is loaded; will not matter if game already loaded.
    local notLoaded = Instance.new("Message", game:GetService("CoreGui")) -- Tell them why its not loading.
    notLoaded.Text = 'Jinx scripts is waiting for the game to load'
    notLoaded.Name = "Wait for game to load"
    game.Loaded:Wait() -- wait until it loads
    notLoaded:Destroy()
end

if getgenv().JinxScripts then
	error("Jinx scripts is already running!")
	return -- doing this will stop the rest of the script from running.
end

    -- GUI SETUP 
local lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/SecretivePlanners/GUI/main/SecretivePlannersJinxGUI"))()

local booga = lib.new("Jinx's Booga Reborn Gui", 5013109572)
game.CoreGui["Jinx's Booga Reborn Gui"].Enabled = false -- Hides it for loading screen and for cool Animation later
booga:toggle() -- Hides it for loading screen and for cool Animation later

local ThemePage = booga:addPage("Theme", 5012544693) -- start of themes and misc
local ThemeColors = ThemePage:addSection("themes and stuff")

local Verisons = booga:addPage("Verisons")
local VerisonsMenu = Verisons:addSection("Teleports")

local Main = booga:addPage("Main") -- start of 2019 page
local MainAuto = Main:addSection("Automation")
local MainPlayerMods = Main:addSection("Player Mods")
local MainCombat = Main:addSection("Combat")
local MainTeleports = Main:addSection("Teleport") -- end of 2019 page

local Keybinds = booga:addPage("Keybinds")
local KeybindAuto = Keybinds:addSection("Automation")
local KeybindPlayer = Keybinds:addSection("Player Mods")
local KeybindCombat = Keybinds:addSection("Combat")
local KeybindSettings = Keybinds:addSection("Settings")



local SettingPage = booga:addPage("Settings")
local SettingScriptVerison = SettingPage:addSection("Verison 1") -- SCRIPT Verison change every update!
local SettingsAnimations = SettingPage:addSection("Animation Settings")

local CreditPage = booga:addPage("Credits")
local CreditScriptDevelopers = CreditPage:addSection("Credits")

local DevPage = booga:addPage("Dev Only") -- start of dev only
local DevLogs = DevPage:addSection("Logging")
-- END OF GUI SETUP

-- Gobal locals
local Player = game:GetService("Players").LocalPlayer 
local Rep = game:GetService("ReplicatedStorage")
local Lighting = game:GetService("Lighting")

local Debuging = false 

-- Start of gobal functions
do

--                <string> 
function PrintDebug(text)
    if Debuging == true then
        warn(text)
    end
end

--                      <string> <string>
function MakeNotification(title,text)
    if not (title or text) then 
        return
    end
    spawn(function()
        booga:Notify(title,text)
    end)
end

--                        <boolean>    <table>
function GetClosestPlayer(IgnoreTeam,Whitelist) 

	local PlayerHRP = Player.Character:FindFirstChild("HumanoidRootPart")
	if not (Player.Character or Player.Character:FindFirstChildOfClass("Humanoid").Health == 0) then -- Don't go if player is Currently dead.
		return
	end

	local ClosestTargetDistance = math.huge -- start it out at inf
	local Target -- the target player

	for _, v in ipairs(game:GetService("Players"):GetPlayers()) do
		if v ~= Player and v.Character and v.Character:FindFirstChildOfClass("Humanoid") then -- makes sures its not localplayer
			if v.Character:FindFirstChildOfClass("Humanoid").Health > 0 then -- Make sure Target isn't dead.
				local mag = (PlayerHRP.Position - v.Character.PrimaryPart.Position).magnitude
				if mag < ClosestTargetDistance then -- check to see if that player is closer
					ClosestTargetDistance = mag
					Target = v
				end
			end
		end
	end
	return Target
end

--                       <Vector3>      <String>
function GetCloestObject(TargetPosition,TargetName)
    
    if not Player.Character then 
        return
    end
    
    local ClosestTargetDistance = math.huge
    local TargetCF = nil
    local TargetPart = nil
    
    for _,v in ipairs(workspace:GetChildren()) do 
        if v.Name:find(TargetName) then
            
            if v:FindFirstChild("Reference") then 
                TargetPart = v.Reference
            end
            
            if TargetPart ~= nil then
                local mag = (TargetPosition.Position - TargetPart.Position).magnitude
            
                if mag < ClosestTargetDistance then
                    ClosestTargetDistance = mag 
                    TargetCF = TargetPart.CFrame
                end
            end
        end
    end
    PrintDebug("Got TargetCF")
    return TargetCF
end

--               <String>   <Number>
function HasItem(ItemName,NumberOfItems)
    
    if not Player.Character then
        return
    end

    local userdata = game.ReplicatedStorage.Events.RequestData:InvokeServer()
    
    for _,v in pairs(userdata.inventory) do
        for _,v2 in pairs(v) do
            if v2 == ItemName then
                if NumberOfItems then
                    for _,v3 in pairs(v) do
                        if type(v3) == "number" and v3 >= NumberOfItems then
                            PrintDebug("Player does have item and has the required amount")
                            return true
                        end
                    end
                    PrintDebug("Player does have item but not that amount")
                        return false
                    else
                        PrintDebug("Player does have item")
                    return true
                end
            end
        end
    end
    PrintDebug("Player does not have item")
    return false
end

end
-- end of gobal funcitons

-- Start of Theme Page
do
    
    ThemeColors:addColorPicker("Background", Color3.fromRGB(24, 24, 24), function(color3)
        booga:setTheme("Background",color3)
        PrintDebug("Background Color Changed")
    end)

    ThemeColors:addColorPicker("Glow", Color3.fromRGB(0, 0, 0), function(color3)
        booga:setTheme("Glow",color3)
        PrintDebug("Glow Color Changed")
    end)
    
    ThemeColors:addColorPicker("Accent", Color3.fromRGB(10,10,10), function(color3)
        booga:setTheme("Accent",color3)
        PrintDebug("Accent Color Changed")
    end)
    
    ThemeColors:addColorPicker("LightContrast", Color3.fromRGB(20,20,20), function(color3)
        booga:setTheme("LightContrast",color3)
        PrintDebug("LightContrast Color Changed")
    end)

    ThemeColors:addColorPicker("DarkContrast", Color3.fromRGB(14,14,14), function(color3)
        booga:setTheme("DarkContrast",color3)
        PrintDebug("DarkContrast Color Changed")
    end)
    
    ThemeColors:addColorPicker("TextColor", Color3.fromRGB(255,255,255), function(color3)
        booga:setTheme("TextColor",color3)
        PrintDebug("Text Color Changed")
    end)

end
-- end of Theme Page

-- Start of Verisons page
do
    
-- FUNCTIONS
do
    
--                       <Number>
function TeleportToPlace(GameId)
    local CurrentGames = {}

    for _, gameInfo in ipairs(game:GetService("HttpService"):JSONDecode(game:HttpGetAsync("https://games.roblox.com/v1/games/"..GameId.."/servers/Public?sortOrder=Asc&limit=100")).data) do
	    if (type(gameInfo) == "table" and gameInfo.maxPlayers > gameInfo.playing and gameInfo.id ~= game.JobId) then -- make sure it doesn't have max players and that it's not the current server you're in.
		    CurrentGames[#CurrentGames + 1] = gameInfo.id
	    end
    end

    if #CurrentGames > 0 then -- make sure there is atleast one game
	    game:GetService("TeleportService"):TeleportToPlaceInstance(GameId, CurrentGames[math.random(1, #CurrentGames)]) -- chose a random one.
    else
	    game:GetService("TeleportService"):Teleport(GameId)
    end
end

end

VerisonsMenu:addButton("Void", function()
    TeleportToPlace(10767870749)
    PrintDebug("Went to void weee")
end)

VerisonsMenu:addButton("Overworld", function()
    TeleportToPlace(10758111998)
    PrintDebug("Went to Overworld AHHH")
end)

end
-- end of Verisons page

-- Start of Main Page
do
     --start of Locals
     
     --Strings
    local TargetPlayer = "None"
    local PlantName = ""
    
    --Booleans
    local SpeedBool
    local KillAuraBool
    local KillAuraAnimBool
    local FullBrightBool
    local HitBoxExtendBool
    
    -- Tables
    local SpeedTable = {}
    local ItemTable = {}
    
    -- Animations 
    local KillAuraAnimation = Rep.Animations.Slash
    
    -- Remotes
	local EventSwing = Rep.Events.SwingTool
	local EventPickup = game.ReplicatedStorage.Events.Pickup
	local EventInteract = Rep.Events.lnteractStructure
    
    -- end of locals
-- start of funcitons
do 
      -- FUNCTIONS!
function TeleportPlayer2019(TargetCFA,TargetCFB) -- The Teleport function
    
    local playerRoot = Player.Character.PrimaryPart
    
    if not playerRoot then
        PrintDebug(Player.Name.." has no PrimaryPart.")
        return
    end
    
    playerRoot.Anchored = true
        if TargetCFA then
            playerRoot.CFrame = TargetCFA
        else
            playerRoot.CFrame = TargetCFB
        end
    playerRoot.Anchored = false
    PrintDebug("Teleport complete")
    
    task.wait(2.5)
    
    if (playerRoot.Position - TargetCFB.Position).magnitude < 20 then
        PrintDebug("Trying to teleport closer to Target.")
        playerRoot.CFrame = TargetCFB
    elseif (playerRoot.Position - TargetCFB.Position).magnitude > 20 and (playerRoot.Position - TargetCFB.Position).magnitude < 100 then
         PrintDebug("Target is too far for a safe close teleport.")
    end
    
end

function KillAura()
	spawn(function()
		KillAuraBool = true
	local KillAuraAnimDebouce = 0
	PrintDebug("Kill-Aura is on")
	MakeNotification("Combat","Kill-Aura is now toggled on.")
		while task.wait() do
			if not KillAuraBool then
			    PrintDebug("Kill-Aura is off")
			    MakeNotification("Combat","Kill-Aura is now toggled off.")
				return
			end
			
			if Player.Character:FindFirstChild("HumanoidRootPart") and Player.Character:FindFirstChild("Humanoid").Health > 0 then
				local PlayerHRP = Player.Character.HumanoidRootPart
				local CloestPlayer = GetClosestPlayer()
				if CloestPlayer then
					local TargetHRP = GetClosestPlayer().Character.HumanoidRootPart
                    
                    
					if (PlayerHRP.Position - TargetHRP.Position).magnitude < 11 then -- make sure they in range (range is 10, but the sevrer will also check so put it at 15)
                        
						local HitRequest = { [1] = Rep.RelativeTime.Value, -- pretty bad idea of a anti bypass..
							[2] = {
								[1] = TargetHRP.Parent.LeftUpperArm,
								[2] = TargetHRP.Parent.LeftUpperArm,
								[3] = TargetHRP.Parent.RightFoot, -- it needs atleast 3 and 2 have to be different.
								[4] = TargetHRP.Parent.Head
							}
						}
						
						EventSwing:FireServer(unpack(HitRequest))
						if KillAuraAnimBool then
						    if KillAuraAnimDebouce >= 7 then
                                Player.Character.Humanoid:LoadAnimation(KillAuraAnimation):Play()
                                KillAuraAnimDebouce = 0
                            else
                                KillAuraAnimDebouce = KillAuraAnimDebouce + 0.5
						    end
						end
						
					end
				else
					PrintDebug("localplayer has died")
				end
			end
		end
	end)
end

function Speeder()
    if game.PlaceId == 10767870749 then
        speederup = 24
    else
        speederup = 17.5
    end
	spawn(function()
		SpeedBool = true
		
		function speedup()
		    if Player.Character and Player.Character.Humanoid then 
		        Player.Character.Humanoid.WalkSpeed = speederup
		    end
		end
		    
		SpeedTable.WalkSpeedChanger = (SpeedTable.WalkSpeedChanger and SpeedTable.WalkSpeedChanger:Disconnect() and false) or Player.Character:WaitForChild("Humanoid"):GetPropertyChangedSignal("WalkSpeed"):Connect(speedup)
		SpeedTable.WalkSpeedAlawys = (SpeedTable.WalkSpeedAlawys and SpeedTable.WalkSpeedAlawys:Disconnect() and false) or Player.CharacterAdded:Connect(function()
            SpeedTable.WalkSpeedChanger = (SpeedTable.WalkSpeedChanger and SpeedTable.WalkSpeedChanger:Disconnect() and false) or Player.Character:WaitForChild("Humanoid"):GetPropertyChangedSignal("WalkSpeed"):Connect(speedup)
            speedup()
		end)
    
        speedup()
		PrintDebug("Speed is on")
		MakeNotification("Player Mods","Speed has been toggled on.")
		while task.wait() do
			if not SpeedBool then
			    SpeedTable.WalkSpeedChanger = (SpeedTable.WalkSpeedChanger and SpeedTable.WalkSpeedChanger:Disconnect() and false) or nil
			    SpeedTable.WalkSpeedAlawys = (SpeedTable.WalkSpeedAlawys and SpeedTable.WalkSpeedAlawys:Disconnect() and false) or nil
			    PrintDebug("Speed is off")
			    MakeNotification("Player Mods","Speed has been toggled off.")
			    Player.Character.Humanoid.WalkSpeed = 16
				return
			end
		end
	end)
end

function HitBoxExtend()
    for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
        if player ~= Player then
            if player.Character and player.Character.HumanoidRootPart then
                local TargetHRP = player.Character.HumanoidRootPart
                if not HitBoxExtendBool then
                    MakeNotification("Combat","HitBox-Extender is now on.")
                    HitBoxExtendBool = true
                    TargetHRP.Size = Vector3.new(10,10,10)
                else
                    MakeNotification("Combat","HitBox-Extender is now off.")
                    HitBoxExtendBool = false
                    TargetHRP.Size = Vector3.new(2,2,1)
                end
            end
        end
    end
end

function AutoPickup()
	local PlayerPos = Player.Character.HumanoidRootPart.Position

	for i,v in ipairs(workspace:GetChildren()) do

		if v.ClassName == "Part" or v.ClassName == "UnionOperation" or v.ClassName == "MeshPart" then
			local Distance = (PlayerPos - v.Position).magnitude
			if Distance <= 40 then
				table.insert(ItemTable,v)
			end
            
		elseif v.ClassName == "Model" and v.PrimaryPart then
			local Distance = (PlayerPos - v.PrimaryPart.Position).magnitude
			if Distance <= 40 then
				table.insert(ItemTable,v)
			end
            
		end
	end

	for _,v in pairs(ItemTable) do
		spawn(function()
			EventPickup:FireServer(v)
		end)
	end
	
	PrintDebug("Picked up all items")
	MakeNotification("Automation","Auto-Pickup has picked up every nearby item.")
end

function FullBright()
    FullBrightBool = true
    PrintDebug("FullBright is now on")
    MakeNotification("Player Mods","FullBright is now toggled on.")
    spawn(function()
    	while task.wait() do
		    if not FullBrightBool then
		        Lighting.Brightness = 3
		        Lighting.ClockTime = 14
		        Lighting.FogEnd = 1000
		        Lighting.GlobalShadows = true
		        Lighting.OutdoorAmbient = Color3.fromRGB(255, 255, 255)
		        
		        if Lighting.Shine then 
		            Lighting.Shine:Destroy()
		        end
		        
			    PrintDebug("FullBright is off")
			    MakeNotification("Player Mods","FullBright is now toggled off.")
				return
		    end
		    
		    Lighting.Brightness = 2
	        Lighting.ClockTime = 14
	        Lighting.FogEnd = 100000
	        Lighting.GlobalShadows = false
	        Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
	        
	        if Lighting:FindFirstChild("Rain") then
	            Lighting:FindFirstChild("Rain"):Destroy()
	        end
       
            if Lighting:FindFirstChild("Doom") then 
	            Lighting:FindFirstChild("Doom"):Destroy()
            end
            
            if not Lighting:FindFirstChild("Shine") then
                local shine = Rep.Skies.Shine:Clone()
                shine.Parent = Lighting
            end
            
            if workspace:FindFirstChild("RainPart") then 
                workspace:FindFirstChild("RainPart"):Destroy()
            end
	    
    	end
    end)

end

end
-- end of funcitons

-- Start of 2019 Teleports
do 
         

MainTeleports:addButton("Player TP (Attempts to teleport nearby the target)", function()
    
    for _,player in ipairs(game:GetService("Players"):GetPlayers()) do 
        if player.Name:lower():find(TargetPlayer:lower()) then 
            if player.Character then
                local TargetPosition = player.Character.PrimaryPart
                local TargetCF = GetCloestObject(TargetPosition,"Tree")
                
                if game.PlaceId == 10767870749 then
                    TargetCF = nil
                end
                
                MakeNotification("Teleports","Attempting to teleport to "..player.Name)
                TeleportPlayer2019(TargetCF,TargetPosition.CFrame)
                return
                else
                PrintDebug("That Player is currently dead.")
            end
        end
    end
    
end)

MainTeleports:addTextbox("Player Name", TargetPlayer, function(t,f)
    
    if f then 
        TargetPlayer = t
    end
    
end)

end
-- end of 2019 Teleports

-- Start of 2019 combat
do 
     
MainCombat:addToggle("Kill-Aura",nil,function(bool)
    
    if bool then
        return KillAura()
    end
    KillAuraBool = false

end)

SettingsAnimations:addToggle("Kill-Aura Swing",nil,function(bool)
    if bool then
        KillAuraAnimBool = true
        if KillAuraBool then 
        KillAuraBool = false
        task.wait(0.05)
        KillAura()
        end
        return
    end
    
    KillAuraAnim = false
    if KillAuraBool then 
        KillAuraBool = false
        task.wait(0.05)
        KillAura()
    end
end)

KeybindCombat:addKeybind("Kill-Aura Keybind",nil,function()
    if KillAuraBool then 
        KillAuraBool = false
        return
    end
    KillAura()
end)

MainCombat:addButton("HitBox-Extender",function()
    HitBoxExtend()
end)

end
-- end of 2019 combat

-- Start of 2019 Automation
do
    
MainAuto:addButton("Auto Plant",function()
    
    if not Player.Character then 
        return
    end
    
    if PlantName == "" then
        PrintDebug("PlantName was nothing, changed to defualt")
        PlantName = "Bloodfruit" 
    end
    
    if HasItem(PlantName) then
        for _, v in ipairs(workspace.Deployables:GetChildren()) do
            if v.Name == "Plant Box" and (Player.Character.Head.Position - v.PrimaryPart.Position).magnitude < 200 then
                EventInteract:FireServer(v, PlantName)
            end
        end
        else
            PrintDebug("You do not have "..PlantName)
    end
    
end)

MainAuto:addTextbox("Plant Name (must be exact)", "Bloodfruit", function(t,f)
    
    if f then 
        PlantName = t
        MakeNotification("Automation","The 'Plant' you typed is "..PlantName..".")
    end
    
end)

MainAuto:addButton("Auto Pickup",function()
    AutoPickup()
end)


end
-- end of 2019 Automation

--Start of 2019 Playermods
do
    
MainPlayerMods:addToggle("Speed", nil, function(bool)
    if bool then
--        if SpeedBool then -- Currnetly on
--            SpeedBool = false
--        end
        Speeder()
        return
    end
    SpeedBool = false
end)

KeybindPlayer:addKeybind("Speed Keybind",nil, function()
    
    if SpeedBool then -- Currnetly on 
        SpeedBool = false
        return
    end
    
    Speeder()
end)

MainPlayerMods:addToggle("FullBright",nil,function(bool)
    if bool then 
        FullBright()
        return
    end
    FullBrightBool = false
end)

KeybindPlayer:addKeybind("FullBright Keybind",nil,function()
    if FullBrightBool then
        FullBrightBool = false
        return
    end
    FullBright()
end)


end
-- end of playermods

--Start of Keybinds
do 

KeybindAuto:addKeybind("Auto-Pickup Keybind", nil ,function()
    AutoPickup()
end)

KeybindCombat:addKeybind("HitBox-Extender Keybind",nil,function()
    HitBoxExtend()
end)

end
-- end of Keybinds

end
-- end of Main Page

-- Start of Settings page 
do 

KeybindSettings:addKeybind("Toggle GUI", Enum.KeyCode.Tab, function()
    booga:toggle()
    PrintDebug("Toggled gui")
end)

end
-- end of settings page

-- Start of Credit page
do

CreditScriptDevelopers:addButton("Gh0st_Developer",function()
    MakeNotification("Credits","Gh0st_Developer made this whole script! (alt of jinxcard and void)")
end) -- ghost dev Credits

CreditScriptDevelopers:addButton("Jinxcard",function()
    MakeNotification("Credits","Jinxcard made this whole script!")
end)-- Jinxcard Credits

CreditScriptDevelopers:addButton("VoidisBetterThanGod",function()
    MakeNotification("Credits","VoidisBetterThanGod made this whole script! (alt of jinxcard and gh0st)")
end)-- VoidisBetterThanGod Credits

end
-- end of Credits page

-- Start of Dev Page
do
    
DevLogs:addTextbox("Notification", "None", function(t,f)
    
    if f then
        MakeNotification("Dev Panel Notification", t)
    end
        
end)

DevLogs:addButton("Debug Mode", function()
    Debuging = not Debuging
end)
    
DevLogs:addButton("Clear console", function()
        
    for i = 1, 50 do
    print("Clearing Console's prints "..i)
    warn("Clearing Console's warns "..i)
    end
        
    PrintDebug("Cleared Console","Console has been cleared. Press F-9 to see the new logs.")

end)

end 
-- end of Dev Page


game.CoreGui["Jinx's Booga Reborn Gui"].Enabled = true -- make it visible
booga:toggle() -- Cool Animation

pcall(function()
    getgenv().JinxScriptsRebornGui = true
    MakeNotification("Funny advertisement","Join the discord! ")
end) -- Sets the gobal so they can't set it to false

local DevJoined = {"jinxcard","voidisbetterthangod","gh0st_developer","thedarkheross"}
game:GetService("Players").PlayerAdded:Connect(function(plr)
    if table.find(DevJoined,plr.Name:lower()) then 
        MakeNotification("Script Developer",plr.Name.." joined the server.")
    end
end)
